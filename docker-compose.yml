version: "3"

services:
  pg-admin:
    depends_on:
      - "postgres"
    image: dpage/pgadmin4:5.0
    container_name: pg-admin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: changeme
    ports:
      - 3001:80

  postgres:
    image: postgres
    container_name: postgres
    restart: on-failure
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: changeme
    volumes:
      - ./docker/postgres/init:/docker-entrypoint-initdb.d:ro
      # - ./volumes/postgres/data:/var/lib/postgresql/data

  invoice-mailer:
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: ./
      dockerfile: ./docker/node-server/Dockerfile
    container_name: invoice-mailer
    restart: on-failure
    environment:
      NODE_ENV: development
      DEBUG: invoice-mailer:*
      PORT: 80
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: changeme
    volumes:
      # Cache node_modules for development, to prevent redownloading dependencies
      - ./volumes/node-server/.npm:/home/node/.npm:rw
      # Mount sources for development, to avoid container recreation
      - ./app.js:/usr/webapp/app.js
      - ./api:/usr/webapp/api
      - ./config:/usr/webapp/config
      - ./bin:/usr/webapp/bin
      - ./package.json:/usr/webapp/package.json:ro
      - ./docker/node-server/entrypoint.sh:/usr/webapp/entrypoint.sh
      - ./volumes/data:/usr/webapp/data
    ports:
      - 3000:80

  swagger-ui:
    depends_on:
      - "invoice-mailer"
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    restart: on-failure
    environment:
      SWAGGER_JSON: /swagger.json
    ports:
      - 3002:8080
    volumes:
      - ./api/swagger/swagger.json:/swagger.json:rw
